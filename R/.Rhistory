}
}
plot(utility, distance, main = plot_node, type='n')
text(utility, distance, 1:N_person)
}
par(mfrow=(c(1,length(neighbors(pa, this_node)))))
for (neighbor in neighbors(pa, this_node)){
print(neighbor)
plot_node(neighbor)
}
library(tidyr)
library(lme4)
library(brms)
library(readr)
library(dplyr)
library(ggplot2)
map <- function(fn, vec){unlist(lapply(vec,fn))}
se <- function(data){
n <- sum(!is.na(data))
s <- sd(data,na.rm = T)
return(s/sqrt(n))
}
data <- read_csv("https://www.dropbox.com/s/yxdsezz7z62o2la/exp2.csv?dl=1")
#data <- read_csv("~/GDrive/class/hcai/proj/data/exp2.csv")
write.csv(data, "/Users/ziv.e/github/ai-explanation-icwsm2021/data/")
#data <- read_csv("~/GDrive/class/hcai/proj/data/exp2.csv")
write.csv(data, "/Users/ziv.e/github/ai-explanation-icwsm2021/data")
#data <- read_csv("~/GDrive/class/hcai/proj/data/exp2.csv")
write.csv(data, "/Users/ziv.e/github/ai-explanation-icwsm2021/data/data.csv")
data$ResponseId <- NA
write.csv(data, "/Users/ziv.e/github/ai-explanation-icwsm2021/data/data.csv")
data$MetaInfo_Version <- NA
write.csv(data, "/Users/ziv.e/github/ai-explanation-icwsm2021/data/data.csv")
data$ResponseId <- NA
data$rid <- NA
data$zip <- NA
data$MetaInfo_Version <- NA
write.csv(data, "/Users/ziv.e/github/ai-explanation-icwsm2021/data/data.csv")
data <- read_csv("/Users/ziv.e/github/ai-explanation-icwsm2021/data/data.csv")
data$fb_or_twitter <- grepl(1, data$SocialMedia) | grepl(2, data$SocialMedia) | grepl(4, data$SocialMedia)
#remove users who didnt have FB or Twitter (348/1448 = 24%)
data <- data[!is.na(data$Condition),]
mean(data$age, na.rm=T)
table(data$gender) / nrow(data)
table(grepl(1,data$ethnicity)) / nrow(data)
gather_cols <- colnames(data)[37:96]
all_questions_replied <- rowSums(!is.na(data[37:96])) == 20
data <- data[all_questions_replied,]
#pca
abi <- data[,c( "a1_reliable" , "b1_intention" , "i1_misleading" ,  "a2_innaccurate"  , "b2_bestinterest"  , "i2_fair")]
cronbach.alpha(abi[complete.cases(abi),])
p <- prcomp(abi[complete.cases(abi),])
summary(p)
data$trust <- NA
data$trust[complete.cases(abi)]<- p$x[,1]
media_trust <- data[,c( "Media3_1" , "Media3_2" , "Media3_3" ,  "Media3_4"  , "Media3_5"  , "Media3_6","Media3_7")]
mt <- prcomp(media_trust[complete.cases(media_trust),])
data$mt <- NA
data$mt[complete.cases(media_trust)]<- mt$x[,1]
#cognitive reflection task
data$crt <- replace_na(data$CRT1_1 == 4,0) + replace_na(data$CRT1_2 == 10,0) + replace_na(data$CRT1_3 == 39,0) + replace_na(data$CRT3_1 == 2,0) + replace_na(data$CRT3_2 == 8,0) + replace_na(tolower(data$CRT3_3) == 'emily',0)
data$ac1 <- data$screen1 == 47
data$ac2 <- data$screen2 == 35
data$attention <- data$ac1 + data$ac2
table(data$attention, data$tagged)
itemcode <- data$ResponseId
response <- "response"
long <- gather(data, itemcode, response, gather_cols)
long$item <- as.numeric(gsub("_.+$", "", long$itemcode))
long$question <- gsub("[0-9]*_", "", long$itemcode)
long <- long[!is.na(long$response),]
long$veracity <- as.numeric(long$item  >= 11)
long$crt <- as.numeric(long$crt)
long$treated <- 1-as.numeric(long$Condition!=1)
long$ml_trust <- long$Media3_6
long$smu_trust <- long$Media3_7
long$fc_trust <- long$Media3_5
long$college <- as.numeric(long$education >7)
#resluts
bayes_fit <- readRDS("github/cs279-excellent-project/assets/main.rds")
View(bayes_fit)
data <- read_csv("https://www.dropbox.com/s/yxdsezz7z62o2la/exp2.csv?dl=1")
data$rid <- NA
data$zip <- NA
data$MetaInfo_Version <- NA
write.csv(data, "/Users/ziv.e/github/ai-explanation-icwsm2021/data/data.csv")
data <- read_csv("/Users/ziv.e/github/ai-explanation-icwsm2021/data/data.csv")
data$ResponseId
data$tagged <- revalue(as.factor(data$tagged), c("1"="Yes", "2"="No","3"="Not sure"))
ggplot(data %>% filter(attention==2),aes(x=tagged,group=Condition,fill=Condition))+
geom_histogram(position="dodge",binwidth=0.25, stat="count")+theme_bw() +labs(x="Were any of these headlines tagged with a warning message?")
library(tidyr)
library(lme4)
library(brms)
library(readr)
library(dplyr)
library(ggplot2)
map <- function(fn, vec){unlist(lapply(vec,fn))}
se <- function(data){
n <- sum(!is.na(data))
s <- sd(data,na.rm = T)
return(s/sqrt(n))
}
data <- read_csv("/Users/ziv.e/github/ai-explanation-icwsm2021/data/data.csv")
data$rid <- NA
data$zip <- NA
data$MetaInfo_Version <- NA
write.csv(data, "/Users/ziv.e/github/ai-explanation-icwsm2021/data/data.csv")
data$fb_or_twitter <- grepl(1, data$SocialMedia) | grepl(2, data$SocialMedia) | grepl(4, data$SocialMedia)
#remove users who didnt have FB or Twitter (348/1448 = 24%)
data <- data[!is.na(data$Condition),]
mean(data$age, na.rm=T)
table(data$gender) / nrow(data)
table(grepl(1,data$ethnicity)) / nrow(data)
gather_cols <- colnames(data)[37:96]
all_questions_replied <- rowSums(!is.na(data[37:96])) == 20
data <- data[all_questions_replied,]
#pca
abi <- data[,c( "a1_reliable" , "b1_intention" , "i1_misleading" ,  "a2_innaccurate"  , "b2_bestinterest"  , "i2_fair")]
cronbach.alpha(abi[complete.cases(abi),])
p <- prcomp(abi[complete.cases(abi),])
summary(p)
data$trust <- NA
data$trust[complete.cases(abi)]<- p$x[,1]
media_trust <- data[,c( "Media3_1" , "Media3_2" , "Media3_3" ,  "Media3_4"  , "Media3_5"  , "Media3_6","Media3_7")]
mt <- prcomp(media_trust[complete.cases(media_trust),])
data$mt <- NA
data$mt[complete.cases(media_trust)]<- mt$x[,1]
#cognitive reflection task
data$crt <- replace_na(data$CRT1_1 == 4,0) + replace_na(data$CRT1_2 == 10,0) + replace_na(data$CRT1_3 == 39,0) + replace_na(data$CRT3_1 == 2,0) + replace_na(data$CRT3_2 == 8,0) + replace_na(tolower(data$CRT3_3) == 'emily',0)
data$ac1 <- data$screen1 == 47
data$ac2 <- data$screen2 == 35
data$attention <- data$ac1 + data$ac2
table(data$attention, data$tagged)
itemcode <- data$ResponseId
response <- "response"
long <- gather(data, itemcode, response, gather_cols)
long$item <- as.numeric(gsub("_.+$", "", long$itemcode))
long$question <- gsub("[0-9]*_", "", long$itemcode)
long <- long[!is.na(long$response),]
long$veracity <- as.numeric(long$item  >= 11)
long$crt <- as.numeric(long$crt)
long$treated <- 1-as.numeric(long$Condition!=1)
long$ml_trust <- long$Media3_6
long$smu_trust <- long$Media3_7
long$fc_trust <- long$Media3_5
long$college <- as.numeric(long$education >7)
#factual manipulation check
data$tagged <- revalue(as.factor(data$tagged), c("1"="Yes", "2"="No","3"="Not sure"))
ggplot(data %>% filter(attention==2),aes(x=tagged,group=Condition,fill=Condition))+
geom_histogram(position="dodge",binwidth=0.25, stat="count")+theme_bw() +labs(x="Were any of these headlines tagged with a warning message?")
data$whichwarning <- revalue(as.factor(data$whichwarning), c("1"="Labeled false", "2"="Labeled false + explanation","3"="Not sure"))
ggplot(data%>% filter(attention==2),aes(x=whichwarning,group=Condition,fill=Condition))+
geom_histogram(position="dodge",binwidth=0.25, stat="count")+theme_bw() +labs(x=" Which of the following warning labels did you see during the survey?")
data$tagged <- revalue(as.factor(data$tagged), c("1"="Yes", "2"="No","3"="Not sure"))
ggplot(data %>% filter(attention==2),aes(x=tagged,group=Condition,fill=Condition))+
geom_histogram(position="dodge",binwidth=0.25, stat="count")+theme_bw() +labs(x="Were any of these headlines tagged with a warning message?")
data$whichwarning <- revalue(as.factor(data$whichwarning), c("1"="Labeled false", "2"="Labeled false + explanation","3"="Not sure"))
ggplot(data%>% filter(attention==2),aes(x=whichwarning,group=Condition,fill=Condition))+
geom_histogram(position="dodge",binwidth=0.25, stat="count")+theme_bw() +labs(x=" Which of the following warning labels did you see during the survey?")
ggplot(data,aes(x=tagged,group=Condition,fill=Condition))+
geom_histogram(position="dodge",binwidth=0.25, stat="count")+theme_bw() +labs(x="Were any of these headlines tagged with a warning message?")
data$Condition
table(data$Condition)
data <- read_csv("/Users/ziv.e/github/ai-explanation-icwsm2021/data/data.csv")
table(data$Condition)
data$rid <- NA
data$zip <- NA
data$MetaInfo_Version <- NA
write.csv(data, "/Users/ziv.e/github/ai-explanation-icwsm2021/data/data.csv")
data$fb_or_twitter <- grepl(1, data$SocialMedia) | grepl(2, data$SocialMedia) | grepl(4, data$SocialMedia)
#remove users who didnt have FB or Twitter (348/1448 = 24%)
data <- data[!is.na(data$Condition),]
mean(data$age, na.rm=T)
table(data$gender) / nrow(data)
table(grepl(1,data$ethnicity)) / nrow(data)
gather_cols <- colnames(data)[37:96]
all_questions_replied <- rowSums(!is.na(data[37:96])) == 20
data <- data[all_questions_replied,]
#pca
abi <- data[,c( "a1_reliable" , "b1_intention" , "i1_misleading" ,  "a2_innaccurate"  , "b2_bestinterest"  , "i2_fair")]
cronbach.alpha(abi[complete.cases(abi),])
p <- prcomp(abi[complete.cases(abi),])
summary(p)
data$trust <- NA
data$trust[complete.cases(abi)]<- p$x[,1]
media_trust <- data[,c( "Media3_1" , "Media3_2" , "Media3_3" ,  "Media3_4"  , "Media3_5"  , "Media3_6","Media3_7")]
mt <- prcomp(media_trust[complete.cases(media_trust),])
data$mt <- NA
data$mt[complete.cases(media_trust)]<- mt$x[,1]
#cognitive reflection task
data$crt <- replace_na(data$CRT1_1 == 4,0) + replace_na(data$CRT1_2 == 10,0) + replace_na(data$CRT1_3 == 39,0) + replace_na(data$CRT3_1 == 2,0) + replace_na(data$CRT3_2 == 8,0) + replace_na(tolower(data$CRT3_3) == 'emily',0)
data$ac1 <- data$screen1 == 47
data$ac2 <- data$screen2 == 35
data$attention <- data$ac1 + data$ac2
table(data$attention, data$tagged)
itemcode <- data$ResponseId
data$Condition
data <- read_csv("https://www.dropbox.com/s/yxdsezz7z62o2la/exp2.csv?dl=1")
data$rid <- NA
data$zip <- NA
data$MetaInfo_Version <- NA
data$fb_or_twitter <- grepl(1, data$SocialMedia) | grepl(2, data$SocialMedia) | grepl(4, data$SocialMedia)
#remove users who didnt have FB or Twitter (348/1448 = 24%)
data <- data[!is.na(data$Condition),]
data$Condition
gather_cols <- colnames(data)[37:96]
all_questions_replied <- rowSums(!is.na(data[37:96])) == 20
data <- data[all_questions_replied,]
table(data$Condition)
#data <- read_csv("https://www.dropbox.com/s/yxdsezz7z62o2la/exp2.csv?dl=1")
data <- read_csv("/Users/ziv.e/github/ai-explanation-icwsm2021/data/data.csv")
data$fb_or_twitter <- grepl(1, data$SocialMedia) | grepl(2, data$SocialMedia) | grepl(4, data$SocialMedia)
#remove users who didnt have FB or Twitter (348/1448 = 24%)
data <- data[!is.na(data$Condition),]
mean(data$age, na.rm=T)
table(data$gender) / nrow(data)
table(grepl(1,data$ethnicity)) / nrow(data)
gather_cols <- colnames(data)[37:96]
all_questions_replied <- rowSums(!is.na(data[37:96])) == 20
data <- data[all_questions_replied,]
data$Condition
#data <- read_csv("https://www.dropbox.com/s/yxdsezz7z62o2la/exp2.csv?dl=1")
data <- read_csv("/Users/ziv.e/github/ai-explanation-icwsm2021/data/data.csv")
data$Condition
data$rid <- NA
data$zip <- NA
data$MetaInfo_Version <- NA
write.csv(data, "/Users/ziv.e/github/ai-explanation-icwsm2021/data/data.csv")
data$fb_or_twitter <- grepl(1, data$SocialMedia) | grepl(2, data$SocialMedia) | grepl(4, data$SocialMedia)
#remove users who didnt have FB or Twitter (348/1448 = 24%)
data <- data[!is.na(data$Condition),]
data$Condition
gather_cols <- colnames(data)[37:96]
all_questions_replied <- rowSums(!is.na(data[37:96])) == 20
data2<- data[all_questions_replied,]
data2$Condition
dim(data2)
all_questions_replied
table(all_questions_replied)
gather_cols
gather_cols2 <- colnames(data)[40:99] ; gather_cols2
gather_cols2 <- colnames(data)[40:100] ; gather_cols2
gather_cols <- colnames(data)[40:99]
all_questions_replied <- rowSums(!is.na(data[37:96])) == 20
data2<- data[all_questions_replied,]
dim(data2)
gather_cols <- colnames(data)[40:99]
gather_cols <- colnames(data)[40:99]
all_questions_replied <- rowSums(!is.na(data[40:99])) == 20
data2<- data[all_questions_replied,]
dim(data2)
gather_cols <- colnames(data)[40:99]
all_questions_replied <- rowSums(!is.na(data[40:99])) == 20
data<- data[all_questions_replied,]
#pca
abi <- data[,c( "a1_reliable" , "b1_intention" , "i1_misleading" ,  "a2_innaccurate"  , "b2_bestinterest"  , "i2_fair")]
cronbach.alpha(abi[complete.cases(abi),])
p <- prcomp(abi[complete.cases(abi),])
summary(p)
data$trust <- NA
data$trust[complete.cases(abi)]<- p$x[,1]
media_trust <- data[,c( "Media3_1" , "Media3_2" , "Media3_3" ,  "Media3_4"  , "Media3_5"  , "Media3_6","Media3_7")]
mt <- prcomp(media_trust[complete.cases(media_trust),])
data$mt <- NA
data$mt[complete.cases(media_trust)]<- mt$x[,1]
#cognitive reflection task
data$crt <- replace_na(data$CRT1_1 == 4,0) + replace_na(data$CRT1_2 == 10,0) + replace_na(data$CRT1_3 == 39,0) + replace_na(data$CRT3_1 == 2,0) + replace_na(data$CRT3_2 == 8,0) + replace_na(tolower(data$CRT3_3) == 'emily',0)
data$ac1 <- data$screen1 == 47
data$ac2 <- data$screen2 == 35
data$attention <- data$ac1 + data$ac2
table(data$attention, data$tagged)
itemcode <- data$ResponseId
response <- "response"
long <- gather(data, itemcode, response, gather_cols)
long$item <- as.numeric(gsub("_.+$", "", long$itemcode))
long$question <- gsub("[0-9]*_", "", long$itemcode)
long <- long[!is.na(long$response),]
long$veracity <- as.numeric(long$item  >= 11)
long$crt <- as.numeric(long$crt)
long$treated <- 1-as.numeric(long$Condition!=1)
long$ml_trust <- long$Media3_6
long$smu_trust <- long$Media3_7
long$fc_trust <- long$Media3_5
long$college <- as.numeric(long$education >7)
data$tagged <- revalue(as.factor(data$tagged), c("1"="Yes", "2"="No","3"="Not sure"))
ggplot(data %>% filter(attention==2),aes(x=tagged,group=Condition,fill=Condition))+
geom_histogram(position="dodge",binwidth=0.25, stat="count")+theme_bw() +labs(x="Were any of these headlines tagged with a warning message?")
ggplot(data,aes(x=tagged,group=Condition,fill=Condition))+
geom_histogram(position="dodge",binwidth=0.25, stat="count")+theme_bw() +labs(x="Were any of these headlines tagged with a warning message?")
ggplot(data,aes(x=whichwarning,group=Condition,fill=Condition))+
geom_histogram(position="dodge",binwidth=0.25, stat="count")+theme_bw() +labs(x=" Which of the following warning labels did you see during the survey?")
engage_ppiv <- read.csv("../data/generated/engage_ppiv.csv")
ep_long <- gather(engage_ppiv,  'model', 'pred', c('V1',"V2", "V3", "V4", "V5", "V6", "V7"),na.rm = T)
ep_long$condition2 <- ep_long$model
ep_long$variable <- ep_long$model
ep_long$value <- ep_long$pred
ep_long$measure <- factor(ep_long$model,  levels = c('V1',"V2", "V3", "V4", "V5", "V6", "V7"), labels = c("Subject","Items","Enviornment","Subject\nItems", "Subject\nEnviornment", "Items\nEnvironment", "Subject+Items\nEnviornmet"))
ep_long$target <-factor(ep_long$model,  levels = c('V1',"V2", "V3", "V4", "V5", "V6", "V7"), labels = c("Subject","Items","Enviornment","Subject\nItems", "Subject\nEnviornment", "Items\nEnvironment", "Subject+Items\nEnviornmet"))
ep_long <- ep_long %>% mutate(
model_color =case_when(
model == "V1" ~"red",
model == "V2" ~"yellow",
model == "V3" ~"blue",
model == "V4" ~"orange",
model == "V5" ~"purple",
model == "V6" ~"green",
model == "V7" ~"gray"
)
)
ep_grouped = ep_long %>% group_by(target) %>% summarise(meanval = median(value), sehi = quantile(value, 0.975),  selow = quantile(value, 0.0275))
ggplot()+
geom_bar(data = ep_grouped, aes(x = target, fill = target, y = meanval),position ='dodge', stat = 'identity', width = .5, colour = "black")+
geom_errorbar(data = ep_grouped, aes(x = target, fill = target,ymin = selow, ymax = sehi, width = .4),position = 'dodge')+
theme_classic() + # Make graph background blank
geom_jitter(data = ep_long, aes(color = model_color, x = target, group = target,y = value), alpha = .3)+
scale_color_identity()+
labs(title="", x="", y = "AUC") +
scale_fill_manual(name = '',values=c('#ffffff', '#ffffff',"#ffffff","#ffffff","#ffffff","#ffffff","#ffffff"))+ #makes bars filled with white (#f0f0f0 for off-white), but also adds the unnecessary legend
theme(legend.position = "none") + #gets rid of legends
theme(axis.text.x = element_text(colour = "black"))+
theme(panel.spacing = unit(1, "lines"))+
coord_cartesian(ylim=c(0.5,0.85))
dwell_ppiv <- read.csv("../data/generated/dwell_ppiv.csv")
setwd("/Users/ziv.e/github/yourfeed_analysis")
engage_ppiv <- read.csv("../data/generated/engage_ppiv.csv")
setwd("/Users/ziv.e/github/yourfeed_analysis/R")
engage_ppiv <- read.csv("../data/generated/engage_ppiv.csv")
ep_long <- gather(engage_ppiv,  'model', 'pred', c('V1',"V2", "V3", "V4", "V5", "V6", "V7"),na.rm = T)
ep_long$condition2 <- ep_long$model
ep_long$variable <- ep_long$model
ep_long$value <- ep_long$pred
ep_long$measure <- factor(ep_long$model,  levels = c('V1',"V2", "V3", "V4", "V5", "V6", "V7"), labels = c("Subject","Items","Enviornment","Subject\nItems", "Subject\nEnviornment", "Items\nEnvironment", "Subject+Items\nEnviornmet"))
ep_long$target <-factor(ep_long$model,  levels = c('V1',"V2", "V3", "V4", "V5", "V6", "V7"), labels = c("Subject","Items","Enviornment","Subject\nItems", "Subject\nEnviornment", "Items\nEnvironment", "Subject+Items\nEnviornmet"))
ep_long <- ep_long %>% mutate(
model_color =case_when(
model == "V1" ~"red",
model == "V2" ~"yellow",
model == "V3" ~"blue",
model == "V4" ~"orange",
model == "V5" ~"purple",
model == "V6" ~"green",
model == "V7" ~"gray"
)
)
ep_grouped = ep_long %>% group_by(target) %>% summarise(meanval = median(value), sehi = quantile(value, 0.975),  selow = quantile(value, 0.0275))
ggplot()+
geom_bar(data = ep_grouped, aes(x = target, fill = target, y = meanval),position ='dodge', stat = 'identity', width = .5, colour = "black")+
geom_errorbar(data = ep_grouped, aes(x = target, fill = target,ymin = selow, ymax = sehi, width = .4),position = 'dodge')+
theme_classic() + # Make graph background blank
geom_jitter(data = ep_long, aes(color = model_color, x = target, group = target,y = value), alpha = .3)+
scale_color_identity()+
labs(title="", x="", y = "AUC") +
scale_fill_manual(name = '',values=c('#ffffff', '#ffffff',"#ffffff","#ffffff","#ffffff","#ffffff","#ffffff"))+ #makes bars filled with white (#f0f0f0 for off-white), but also adds the unnecessary legend
theme(legend.position = "none") + #gets rid of legends
theme(axis.text.x = element_text(colour = "black"))+
theme(panel.spacing = unit(1, "lines"))+
coord_cartesian(ylim=c(0.5,0.85))
dwell_ppiv <- read.csv("../data/generated/dwell_ppiv.csv")
dp_long <- gather(dwell_ppiv,  'model', 'pred', c('V1',"V2", "V3", "V4", "V5", "V6", "V7"),na.rm = T)
s1.long <- dp_long
s1.long$condition2 <- s1.long$model
s1.long$variable <- s1.long$model
s1.long$value <- s1.long$pred
s1.long$measure <- factor(s1.long$model,  levels = c('V1',"V2", "V3", "V4", "V5", "V6", "V7"), labels = c("Subject","Items","Enviornment","Subject\nItems", "Subject\nEnviornment", "Items\nEnvironment", "Subject+Items\nEnviornmet"))
s1.long$target <-factor(s1.long$model,  levels = c('V1',"V2", "V3", "V4", "V5", "V6", "V7"), labels = c("Subject","Items","Enviornment","Subject\nItems", "Subject\nEnviornment", "Items\nEnvironment", "Subject+Items\nEnviornmet"))
s1.long <- s1.long %>% mutate(
model_color =case_when(
model == "V1" ~"red",
model == "V2" ~"yellow",
model == "V3" ~"blue",
model == "V4" ~"orange",
model == "V5" ~"purple",
model == "V6" ~"green",
model == "V7" ~"gray"
)
)
s.1dtamean = s1.long %>% group_by(target) %>% summarise(meanval = median(value), sehi = quantile(value, 0.975),  selow = quantile(value, 0.0275))
ggplot()+
geom_bar(data = s.1dtamean, aes(x = target, fill = target, y = meanval),position ='dodge', stat = 'identity', width = .5, colour = "black")+
geom_errorbar(data = s.1dtamean, aes(x = target, fill = target,ymin = selow, ymax = sehi, width = .4),position = 'dodge')+
theme_classic() + # Make graph background blank
geom_jitter(data = s1.long, aes(color = model_color, x = target, group = target,y = value), alpha = .3)+
scale_color_identity()+
labs(title="", x="", y = "Correlation") +
scale_fill_manual(name = '',values=c('#ffffff', '#ffffff',"#ffffff","#ffffff","#ffffff","#ffffff","#ffffff"))+ #makes bars filled with white (#f0f0f0 for off-white), but also adds the unnecessary legend
theme(legend.position = "none") + #gets rid of legends
theme(axis.text.x = element_text(colour = "black"))+
theme(panel.spacing = unit(1, "lines"))
pdf("/Users/zive/GDrive/research/ai_ethics/fig1.pdf",height = 4, width = 15)
imp_engage <- read.csv("../data/generated/imp_engage.csv")
user_vars = c("crt","education",'media1','media2','attention', 'age', "demrep_c", "gender", "income","facebook_frequency" )
item_vars = c('funny','real','likely_true','favors_party','important','reputation_overall','reputation_partyloyalty', "nchar", "affect", 'num_person', 'trump', 'biden', "deepmoji1", "deepmoji2", "deepmoji3")
environment_vars = c('order','prekink', 'is_mobile')
vars <- c(user_vars,item_vars, environment_vars)
ie_long <- gather(imp_engage,  'feature', 'imp', vars,na.rm = T)
ie_long$condition2 <- ie_long$feature
ie_long$variable <- ie_long$feature
ie_long$value <- ie_long$imp
ie_long$measure <- factor(ie_long$feature)
ie_long <- ie_long %>% mutate(
model_color =case_when(
feature %in% user_vars ~"red",
feature %in% item_vars ~"yellow",
feature %in% environment_vars ~"blue",
)
)
ie_grouped = ie_long %>% group_by(measure) %>% summarise(meanval = median(value), sehi = quantile(value, 0.975),  selow = quantile(value, 0.0275)) %>% arrange(desc(meanval) )
ie_grouped$position <- as.factor(1:28)
# Create plot
ggplot()+
geom_errorbar(data = ie_grouped, aes(x = reorder(measure, meanval), fill = measure,ymin = selow, ymax = sehi, width = .4),position = 'dodge')+
theme_classic() + # Make graph background blank
geom_jitter(data = ie_long, aes(color = model_color, x = measure, group = measure,y = value), alpha = .3)+
scale_color_identity()+
labs(title="", x="", y = "% Increase MSE") +
scale_fill_manual(name = '',values=rep('#ffffff',28))+ #makes bars filled with white (#f0f0f0 for off-white), but also adds the unnecessary legend
theme(legend.position = "none") + #gets rid of legends
theme(axis.text.x = element_text(colour = "black"))+
theme(panel.spacing = unit(1, "lines")) +
coord_flip()
par(mfrow=c(2,1))
# Create plot
ggplot()+
geom_errorbar(data = ie_grouped, aes(x = reorder(measure, meanval), fill = measure,ymin = selow, ymax = sehi, width = .4),position = 'dodge')+
theme_classic() + # Make graph background blank
geom_jitter(data = ie_long, aes(color = model_color, x = measure, group = measure,y = value), alpha = .3)+
scale_color_identity()+
labs(title="", x="", y = "% Increase MSE") +
scale_fill_manual(name = '',values=rep('#ffffff',28))+ #makes bars filled with white (#f0f0f0 for off-white), but also adds the unnecessary legend
theme(legend.position = "none") + #gets rid of legends
theme(axis.text.x = element_text(colour = "black"))+
theme(panel.spacing = unit(1, "lines")) +
coord_flip()
imp_dwell <- read.csv("../data/generated/imp_dwell.csv")
id_long <- gather(imp_dwell,  'feature', 'imp', vars,na.rm = T)
id_long$condition2 <- id_long$feature
id_long$variable <- id_long$feature
id_long$value <- id_long$imp
id_long$measure <- factor(id_long$feature)
id_long <- id_long %>% mutate(
model_color =case_when(
feature %in% user_vars ~"red",
feature %in% item_vars ~"yellow",
feature %in% environment_vars ~"blue",
)
)
id_grouped = id_long %>% group_by(measure) %>% summarise(meanval = median(value), sehi = quantile(value, 0.975),  selow = quantile(value, 0.0275)) %>% arrange(desc(meanval) )
id_grouped$position <- as.factor(1:28)
id_grouped <- merge(id_grouped, ie_grouped[c("measure", 'meanval')], by ='measure')
# Create plot
ggplot()+
geom_errorbar(data = id_grouped, aes(x = reorder(measure, meanval.y), fill = measure,ymin = selow, ymax = sehi, width = .4),position = 'dodge')+
theme_classic() + # Make graph background blank
geom_jitter(data = id_long, aes(color = model_color, x = measure, group = measure,y = value), alpha = .3)+
scale_color_identity()+
labs(title="", x="", y = "% Increase MSE") +
scale_fill_manual(name = '',values=rep('#ffffff',28))+ #makes bars filled with white (#f0f0f0 for off-white), but also adds the unnecessary legend
theme(legend.position = "none") + #gets rid of legends
theme(axis.text.x = element_text(colour = "black"))+
theme(panel.spacing = unit(1, "lines")) +
coord_flip()
# Create plot
ggplot()+
geom_errorbar(data = ie_grouped, aes(x = reorder(measure, meanval), fill = measure,ymin = selow, ymax = sehi, width = .4),position = 'dodge')+
theme_classic() + # Make graph background blank
geom_jitter(data = ie_long, aes(color = model_color, x = measure, group = measure,y = value), alpha = .3)+
scale_color_identity()+
labs(title="", x="", y = "% Increase MSE") +
scale_fill_manual(name = '',values=rep('#ffffff',28))+ #makes bars filled with white (#f0f0f0 for off-white), but also adds the unnecessary legend
theme(legend.position = "none") + #gets rid of legends
theme(axis.text.x = element_text(colour = "black"))+
theme(panel.spacing = unit(1, "lines")) +
coord_flip()
library(igraph)
N_node<-100
N_person<-20
pa <- sample_pa(n=N_node, m=2)
SP <- distances(pa)
plot(pa)
RB <- sample(1:N_node,N_person, replace = T)
this_node <- sample(1:N_node, 1)
this_person <- sample(1:N_person,1)
u <- function(person, node, alpha=0.5){
return(1 - (SP[node, RB[person]] / max(SP[, RB[person]])))^alpha
}
d <- function(person1,person2){
dist = 0
for (node in 1:N_node){
dist <- dist + ( u(person1, node) - u(person2,node))^2
}
return(dist)
}
plot_node <- function(plot_node){
utility <- c()
distance <- c()
for (person in 1:N_person){
if (person != this_person){
u_ki <- u(person, plot_node)
d_ki <- d(person, this_person)
utility <- c(utility,u_ki )
distance <- c(distance,d_ki )
}
}
plot(utility, distance, main = plot_node, type='n')
text(utility, distance, 1:N_person)
}
par(mfrow=(c(1,length(neighbors(pa, this_node)))))
for (neighbor in neighbors(pa, this_node)){
print(neighbor)
plot_node(neighbor)
}
